{{- if .Values.cronjob.enabled -}}
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: trigger-events-update
  labels:
    {{- include "app.labels" . | nindent 4 }}
spec:
  schedule: "*/1 * * * *"
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 3
  concurrencyPolicy: Forbid
  # Check if we fail to create jobs within this 2 minute window and count as a missed schedule
  # The Cron controller will stop creating jobs after 100 consecutive missed schedules
  # https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/#cron-job-limitations
  startingDeadlineSeconds: 120
  jobTemplate:
    metadata:
      labels:
        cron-job: trigger-events-update
    spec:
      backoffLimit: 3
      activeDeadlineSeconds: 30
      template:
        metadata:
          labels:
            cron-job: trigger-events-update
        spec:
          containers:
          - name: trigger-events-update
            image: radial/busyboxplus:curl
            imagePullPolicy: IfNotPresent
            args:
            - /bin/sh
            - -c
            - http_status=$( curl -v -w '%{http_code}' http://offender-assessments-events.offender-assessments-events-dev.svc.cluster.local/events ); if [[ $http_status -eq 200 ]]; then exit 0; else exit 1; fi
            - echo $(http_status)
          restartPolicy: OnFailure
{{- end }}